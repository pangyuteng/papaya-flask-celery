version: '3'
services:
    nginx:
        build:
            context: ./nginx
            dockerfile: Dockerfile
        volumes:
           - www-data:/var/www-data
        ports:
            - 80:80
        depends_on:
           - flask
    redis:
        image: redis:latest
        hostname: redis
        ports:
            - 6379:6379
        restart: always
    rabbitmq:
        image: rabbitmq:management
        hostname: rabbitmq
        ports:
            - 5672:5672
            - 15672:15672
        restart: always
    flower:
        image: myimage
        ports:
            - 5555:5555
        links:
            - rabbitmq
        command: flower --address=* --port=5555 --broker=amqp://rabbitmq:5672
        restart: always
    flask:
        environment:
            AMQP_URI: amqp://rabbitmq:5672
            REDIS_URI: redis://redis:6379/1
        build:
            context: ./flask
            dockerfile: Dockerfile
        image: myflask
        volumes:
           - flask-src:/opt
        restart: always
        ports:
            - 5000:5000
        links:
            - redis
            - rabbitmq
        restart: always
        command: gunicorn --workers 6 --bind 0.0.0.0:5000 wsgi:app
        #command: python app.py
        healthcheck:
            test: curl -f http://localhost:5000 || exit 1
            interval: 30s
            timeout: 10s
            retries: 3
        deploy:
            mode: replicated
            replicas: 2
    worker:
        environment:
            AMQP_URI: amqp://rabbitmq:5672
            REDIS_URI: redis://redis:6379/1
            C_FORCE_ROOT: "true"
        image: myflask
        volumes:
           - flask-src:/opt
        links:
            - flask
        restart: always
        command: bash worker.sh
        healthcheck:
            test: celery inspect ping -b amqp://rabbitmq:5672 -d celery@$$HOSTNAME
            interval: 30s
            timeout: 10s
            retries: 0
    #jupyter:
        # image: myimage
        #ports:
        #    - 8899:8899
        #command: jupyter notebook --ip=0.0.0.0 --port=8899 --allow-root
        #restart: always
        #volumes:
        #    - ${PWD}/flask:/opt
volumes:
    flask-src:
        driver: local
        driver_opts:
            o: bind
            type: none
            device: ${PWD}/flask
    www-data:
        driver: local
        driver_opts:
            o: bind
            type: none
            device: ${PWD}/flask/static
version: '3'
services:
    redis:
        image: redis:latest
        hostname: redis
        ports:
            - 6379:6379
        restart: always
    rabbitmq:
        image: rabbitmq:management
        hostname: rabbitmq
        ports:
            - 5672:5672
            - 15672:15672
        restart: always
    flower:
        image: myimage
        ports:
            - 5555:5555
        links:
            - rabbitmq
        command: flower --address=* --port=5555 --broker=amqp://rabbitmq:5672
        restart: always
        #jupyter:
        # image: myimage
        #ports:
        #    - 8888:8888
        #command: jupyter notebook --ip=0.0.0.0 --port=8888 --allow-root
        #restart: always
        #volumes:
        #    - ${PWD}/flask:/opt
    flask:
        environment:
            AMQP_URI: amqp://rabbitmq:5672
            REDIS_URI: redis://redis:6379/1
        build:
            context: ./flask
            dockerfile: Dockerfile
        image: myflask
        volumes:
           - ${PWD}/flask:/opt
        restart: always
        ports:
            - 5000:5000
            - 8888:8888
        links:
            - redis
            - rabbitmq
        restart: always
        #command: python app.py
        #command: gunicorn --workers 6 --bind 0.0.0.0:5000 wsgi:app
        # healthcheck:
        #     test: curl -f http://localhost:5000 || exit 1
        #     interval: 30s
        #     timeout: 10s
        #     retries: 3
    worker:
        environment:
            AMQP_URI: amqp://rabbitmq:5672
            REDIS_URI: redis://redis:6379/1
            C_FORCE_ROOT: "TRUE"
        image: myflask
        # TODO: use seperate compose file, check out 
        # https://docs.docker.com/compose/extends/
        volumes:
           - ${PWD}/flask:/opt
        links:
            - flask
        restart: always
        #command: bash worker.sh
        # healthcheck:
        #     test: celery inspect ping -b amqp://rabbitmq:5672 -d celery@$$HOSTNAME
        #     interval: 30s
        #     timeout: 10s
        #     retries: 0
